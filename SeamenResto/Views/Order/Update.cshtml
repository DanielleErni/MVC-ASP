@model OrderEntity
@{
    ViewData["Title"] = "Edit Order";
}

<form id="editOrderForm" asp-action="UpdateOrder" asp-controller="Order" method="post">
    @Html.AntiForgeryToken()
    <input type="hidden" name="_method" value="PUT" />
    <div class="row">
        <div class="col-lg-12">
            <div class="form-group">
                <input asp-for="Id" type='hidden' class="form-control" readonly>
            </div>

            <div class="form-group">
                <label>CustomerName</label>
                <input asp-for="CustomerName" type="text" class="form-control" required>
            </div>

            <div class="form-group">
                <label>Order</label>
                <input asp-for="Order" type="text" class="form-control" required>
            </div>

            <div class="form-group">
                <label>Quantity</label>
                <input asp-for="Quantity" type="number" class="form-control" required>
            </div>

            <div class="form-group">
                <label>Price</label>
                <input asp-for="Price" type="number" class="form-control" required>
            </div>

            <div class="form-group">
                <label>Total</label>
                <input asp-for="Total" type="number" class="form-control" required>
            </div>

            <div class="card-footer">
                <center>
                    <button type="submit" class="btn btn-primary">Edit Order</button>
                    <a asp-action="Index" asp-controller="Order" class="btn btn-secondary">Cancel</a>
                </center>
            </div>

        </div>
    </div>
</form>

<script>
    document.getElementById('editOrderForm').addEventListener('submit', function(event) {
        var confirmed = confirm("Are you sure you want to edit this order?");
        if (!confirmed) {
            event.preventDefault(); // Prevent the form from submitting
        }
    });
</script>